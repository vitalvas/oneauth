name: tests

on:
  pull_request:
    branches:
      - master
    types: [closed]
  push:
    paths:
      - '**.go'
      - '**.sh'
      - 'go.mod'
      - 'go.sum'
      - 'build.py'
      - '.github/workflows/tests.yml'

permissions:
  id-token: write
  contents: read

jobs:
  pre-build:
    runs-on: ubuntu-latest

    outputs:
      build_timestamp: ${{ steps.set-env.outputs.BUILD_TIMESTAMP }}

    steps:
      - name: set env
        id: set-env
        run: |
          echo "BUILD_TIMESTAMP=$(date -u +'%s')" >> $GITHUB_OUTPUT

  build:
    needs: [pre-build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-14 # arm64
          - macos-14-large # x86_64
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install deps for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: sudo apt install -quy libpcsclite-dev

      - name: Test
        run: go test -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Test Race
        run: go test -race -v ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_REPO_ROLE }}

      - name: Build and upload
        run: python build.py
        env:
          AWS_BUCKET_BUILD: ${{ secrets.AWS_BUCKET_BUILD }}
          BUILD_TIMESTAMP: ${{ needs.pre-build.outputs.build_timestamp }}
      
      - name: Publish coverage
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./coverage.txt
          flags: ${{ matrix.os }}

  post-build:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_REPO_ROLE }}

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_FILES }} --paths "/test/update_manifest/*" "/release/update_manifest/*"
